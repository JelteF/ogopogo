################################################################################
#GLOBAL CONFIG
################################################################################
#simple config that starts up an uml instance
#  host1 --- sw0
#             |
#          sniffer1

[global]

#this defines where to store the control files and pid files for uml_switch
switch_path= /tmp

#default rootfs
rootfs_path= /root/temp

#number of switches in topology.
switch_count = 1

################################################################################
#HOST CONFIG
################################################################################

#section name = device hostname
[host1]
#role can be host, bridge, router, sniffer
role= host
#directory on host that will be mounted in /root inside the uml instance
#this directory is writable FROM the instance
home=/root/uml/
#rootfs to be used by this instance
rootfs_path= /root/temp

#interface name = <switchid to which the interface is connected to> , <ip address>
#switch ids start from 0

eth0 = 0,10.0.0.2/8
#all variables prefixed by pass_ are passed to the uml instance as environment variables with pass_ stripped
#the example below passes foo=bar to the uml instance. Variables can be accessed with ${var} inside the instance
pass_foo = 'bar'

[sniffer1]
role = sniffer
#tcpdump writes in home in the format  $hostname-`date +%H%M`.dmp
home =/root/dumps
rootfs_path = /root/temp
#for a sniffer we don't specify an ip address. the end comma is mandatory though ...
eth0 = 0,
